{
"prompt": "Question: Retrieve the top 50 cells with the highest sodium ion (Na+) concentration. Context: CREATE TABLE Cells(cell_id INT PRIMARY KEY, cell_name VARCHAR(100), tissue_type VARCHAR(100)); CREATE TABLE IonTypes(ion_id INT PRIMARY KEY, ion_name VARCHAR(20), charge INT); CREATE TABLE IonMeasurements(meas_id INT PRIMARY KEY, cell_id INT, ion_id INT, concentration_mM DECIMAL(10,4), measurement_time TIMESTAMP); CREATE TABLE Experiments(exp_id INT PRIMARY KEY, description TEXT, date DATE); CREATE TABLE ExperimentMeasurements(exp_meas_id INT PRIMARY KEY, exp_id INT, meas_id INT); CREATE TABLE Genes(gene_id INT PRIMARY KEY, gene_symbol VARCHAR(20), description TEXT); CREATE TABLE GeneExpression(expr_id INT PRIMARY KEY, cell_id INT, gene_id INT, expression_level FLOAT);",
"output": "SELECT c.cell_name, im.concentration_mM AS na_concentration_mM FROM IonMeasurements im JOIN Cells c ON im.cell_id = c.cell_id JOIN IonTypes it ON im.ion_id = it.ion_id WHERE it.ion_name = 'Sodium' ORDER BY im.concentration_mM DESC LIMIT 50;"
}
{
"prompt": "Question: Retrieve the complete DNA sequence of the human BRCA1 gene. Context: CREATE TABLE Organisms(tax_id INT PRIMARY KEY, scientific_name VARCHAR(200), common_name VARCHAR(200)); CREATE TABLE Genes(gene_id INT PRIMARY KEY, gene_symbol VARCHAR(50), description TEXT, tax_id INT); CREATE TABLE Accessions(acc_id VARCHAR(20) PRIMARY KEY, gene_id INT, molecule_type VARCHAR(20), sequence_length INT, definition TEXT); CREATE TABLE Sequences(seq_id INT PRIMARY KEY, acc_id VARCHAR(20), sequence TEXT, version INT, last_updated DATE); CREATE TABLE Features(feat_id INT PRIMARY KEY, acc_id VARCHAR(20), feature_type VARCHAR(50), start_pos INT, end_pos INT, qualifiers JSONB); CREATE TABLE Publications(pub_id INT PRIMARY KEY, title TEXT, journal TEXT, year INT); CREATE TABLE AccessionPublications(ap_id INT PRIMARY KEY, acc_id VARCHAR(20), pub_id INT);",
"output": "SELECT s.sequence FROM Genes g JOIN Accessions a ON g.gene_id = a.gene_id JOIN Sequences s ON a.acc_id = s.acc_id JOIN Organisms o ON g.tax_id = o.tax_id WHERE o.scientific_name = 'Homo sapiens' AND g.gene_symbol = 'BRCA1' ORDER BY s.version DESC LIMIT 1;"
}
{
"prompt": "Question: Retrieve all single-nucleotide polymorphisms (SNPs) in the mouse genome that are associated with diabetes. Context: CREATE TABLE Organisms(tax_id INT PRIMARY KEY, scientific_name VARCHAR(200), common_name VARCHAR(200)); CREATE TABLE Chromosomes(chr_id INT PRIMARY KEY, tax_id INT, chr_name VARCHAR(10), length_bp BIGINT); CREATE TABLE Genes(gene_id INT PRIMARY KEY, gene_symbol VARCHAR(50), description TEXT, chr_id INT, start_pos BIGINT, end_pos BIGINT, strand CHAR(1)); CREATE TABLE Transcripts(tx_id INT PRIMARY KEY, gene_id INT, transcript_name VARCHAR(100), start_pos BIGINT, end_pos BIGINT); CREATE TABLE Variations(var_id INT PRIMARY KEY, rs_id VARCHAR(20), chr_id INT, position BIGINT, ref_allele CHAR(1), alt_allele CHAR(1), consequence VARCHAR(100)); CREATE TABLE Phenotypes(phen_id INT PRIMARY KEY, phenotype_description TEXT); CREATE TABLE VariantPhenotypes(vp_id INT PRIMARY KEY, var_id INT, phen_id INT, evidence TEXT); CREATE TABLE Studies(study_id INT PRIMARY KEY, title TEXT, pubmed_id INT, year INT); CREATE TABLE StudyVariants(sv_id INT PRIMARY KEY, study_id INT, var_id INT);",
"output": "SELECT v.rs_id, v.position, c.chr_name FROM Variations v JOIN VariantPhenotypes vp ON v.var_id = vp.var_id JOIN Phenotypes p ON vp.phen_id = p.phen_id JOIN Chromosomes c ON v.chr_id = c.chr_id JOIN Organisms o ON c.tax_id = o.tax_id WHERE o.scientific_name = 'Mus musculus' AND p.phenotype_description ILIKE '%diabetes%' ORDER BY v.position;"
}
{
"prompt": "Question: Display the promoter region of the TP53 gene on human chromosome 17 (chr17). Context: CREATE TABLE ChromInfo(chr_name VARCHAR(10) PRIMARY KEY, size BIGINT, file_name VARCHAR(100)); CREATE TABLE RefGene(ref_id INT PRIMARY KEY, name VARCHAR(100), chrom VARCHAR(10), strand CHAR(1), tx_start INT, tx_end INT, cds_start INT, cds_end INT, exon_count INT, exon_starts TEXT, exon_ends TEXT, gene_symbol VARCHAR(100)); CREATE TABLE KnownGene(kgn_id INT PRIMARY KEY, name VARCHAR(100), chrom VARCHAR(10), strand CHAR(1), tx_start INT, tx_end INT, cds_start INT, cds_end INT, exon_count INT, exon_starts TEXT, exon_ends TEXT); CREATE TABLE KgXref(kgn_name VARCHAR(100) PRIMARY KEY, gene_symbol VARCHAR(100), description TEXT, gene_id INT); CREATE TABLE CpGIslands(island_id INT PRIMARY KEY, chrom VARCHAR(10), start INT, end INT, name VARCHAR(100)); CREATE TABLE PromoterRegions(prom_id INT PRIMARY KEY, chrom VARCHAR(10), start INT, end INT, gene_symbol VARCHAR(100), score INT); CREATE TABLE Conservation(cons_id INT PRIMARY KEY, chrom VARCHAR(10), start INT, end INT, score FLOAT); CREATE TABLE SNPs(snp_id VARCHAR(20) PRIMARY KEY, chrom VARCHAR(10), position INT, ref_allele CHAR(1), alt_allele CHAR(1));",
"output": "SELECT p.chrom, p.start, p.end, p.gene_symbol FROM PromoterRegions p JOIN ChromInfo c ON p.chrom = c.chr_name WHERE p.gene_symbol = 'TP53' AND p.chrom = 'chr17' ORDER BY p.start LIMIT 1;"
}
{
"prompt": "Question: Download the reference genome of Escherichia coli strain Kâ€‘12. Context: CREATE TABLE Organisms(tax_id INT PRIMARY KEY, scientific_name VARCHAR(200), strain VARCHAR(100)); CREATE TABLE Genomes(genome_id INT PRIMARY KEY, tax_id INT, assembly_accession VARCHAR(20), assembly_name VARCHAR(100), assembly_level VARCHAR(20), genome_size INT, seq_count INT); CREATE TABLE Sequences(seq_id INT PRIMARY KEY, genome_id INT, accession VARCHAR(20), seq_length INT, mol_type VARCHAR(20), topology VARCHAR(10)); CREATE TABLE Features(feature_id INT PRIMARY KEY, seq_id INT, feature_type VARCHAR(30), start INT, end INT, strand CHAR(1), qualifiers JSONB); CREATE TABLE Publications(pub_id INT PRIMARY KEY, title TEXT, journal TEXT, year INT); CREATE TABLE GenomePublications(gp_id INT PRIMARY KEY, genome_id INT, pub_id INT); CREATE TABLE AssemblyStats(stats_id INT PRIMARY KEY, genome_id INT, contig_N50 INT, scaffold_N50 INT, gc_content FLOAT);",
"output": "SELECT g.assembly_accession, g.assembly_name, s.accession, s.seq_length FROM Organisms o JOIN Genomes g ON o.tax_id = g.tax_id JOIN Sequences s ON g.genome_id = s.genome_id WHERE o.scientific_name = 'Escherichia coli' AND o.strain ILIKE '%K-12%' AND g.assembly_level = 'Complete Genome' ORDER BY s.seq_length DESC;"
}